/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/personnel/route";
exports.ids = ["app/api/personnel/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive":
/*!************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/main/ sync ***!
  \************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@supabase/realtime-js/dist/main sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpersonnel%2Froute&page=%2Fapi%2Fpersonnel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpersonnel%2Froute.ts&appDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpersonnel%2Froute&page=%2Fapi%2Fpersonnel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpersonnel%2Froute.ts&appDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_DABBIE_OneDrive_Desktop_lgu_project_app_src_app_api_personnel_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/personnel/route.ts */ \"(rsc)/./src/app/api/personnel/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/personnel/route\",\n        pathname: \"/api/personnel\",\n        filename: \"route\",\n        bundlePath: \"app/api/personnel/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\DABBIE\\\\OneDrive\\\\Desktop\\\\lgu-project-app\\\\src\\\\app\\\\api\\\\personnel\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_DABBIE_OneDrive_Desktop_lgu_project_app_src_app_api_personnel_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZwZXJzb25uZWwlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnBlcnNvbm5lbCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnBlcnNvbm5lbCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNEQUJCSUUlNUNPbmVEcml2ZSU1Q0Rlc2t0b3AlNUNsZ3UtcHJvamVjdC1hcHAlNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0RBQkJJRSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2xndS1wcm9qZWN0LWFwcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDeUM7QUFDdEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXERBQkJJRVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXGxndS1wcm9qZWN0LWFwcFxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxwZXJzb25uZWxcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3BlcnNvbm5lbC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3BlcnNvbm5lbFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcGVyc29ubmVsL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcREFCQklFXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcbGd1LXByb2plY3QtYXBwXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHBlcnNvbm5lbFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpersonnel%2Froute&page=%2Fapi%2Fpersonnel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpersonnel%2Froute.ts&appDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/personnel/route.ts":
/*!****************************************!*\
  !*** ./src/app/api/personnel/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _utils_supabase_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/supabase/server */ \"(rsc)/./src/utils/supabase/server.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/dist/esm/index.js\");\n\n\n\n\nconst createPersonnelSchema = zod__WEBPACK_IMPORTED_MODULE_3__.z.object({\n    name: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().min(1, 'Name is required'),\n    email: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().email('Invalid email address'),\n    phone: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    address: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    profilePhoto: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    department: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().min(1, 'Department is required'),\n    position: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    hireDate: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    status: zod__WEBPACK_IMPORTED_MODULE_3__.z[\"enum\"]([\n        'Active',\n        'Inactive',\n        'On Leave',\n        'Suspended'\n    ]).default('Active'),\n    biography: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    spouseName: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    spouseOccupation: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    childrenCount: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    emergencyContact: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional(),\n    childrenNames: zod__WEBPACK_IMPORTED_MODULE_3__.z.string().optional()\n});\nasync function GET(request) {\n    try {\n        const supabase = await (0,_utils_supabase_server__WEBPACK_IMPORTED_MODULE_1__.createClient)();\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const page = parseInt(searchParams.get('page') || '1');\n        const limit = parseInt(searchParams.get('limit') || '10');\n        const search = searchParams.get('search') || '';\n        const department = searchParams.get('department') || '';\n        const status = searchParams.get('status') || '';\n        const sort = searchParams.get('sort') || 'name_asc';\n        console.log(`[API] GET /api/personnel - Page: ${page}, Limit: ${limit}, Search: \"${search}\", Department: \"${department}\", Status: \"${status}\", Sort: \"${sort}\"`);\n        // Use the new database service with built-in filtering and pagination\n        const result = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.getAllPersonnel(page, limit, {\n            search: search || undefined,\n            department: department || undefined,\n            status: status || undefined,\n            sort: sort\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            personnel: result.data,\n            pagination: result.pagination\n        });\n    } catch (error) {\n        console.error('[API] Error fetching personnel:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error',\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const supabase = await (0,_utils_supabase_server__WEBPACK_IMPORTED_MODULE_1__.createClient)();\n        const { data: { user } } = await supabase.auth.getUser();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Unauthorized'\n            }, {\n                status: 401\n            });\n        }\n        const body = await request.json();\n        const validatedData = createPersonnelSchema.parse(body);\n        const existingPersonnel = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.findPersonnelByEmail(validatedData.email);\n        if (existingPersonnel) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Personnel with this email already exists'\n            }, {\n                status: 400\n            });\n        }\n        const personnel = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.db.createPersonnel({\n            name: validatedData.name,\n            email: validatedData.email,\n            phone: validatedData.phone || null,\n            address: validatedData.address || null,\n            profile_photo: validatedData.profilePhoto || null,\n            department: validatedData.department,\n            position: validatedData.position || null,\n            hire_date: validatedData.hireDate || null,\n            status: validatedData.status,\n            biography: validatedData.biography || null,\n            spouse_name: validatedData.spouseName || null,\n            spouse_occupation: validatedData.spouseOccupation || null,\n            children_count: validatedData.childrenCount || null,\n            emergency_contact: validatedData.emergencyContact || null,\n            children_names: validatedData.childrenNames || null\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(personnel, {\n            status: 201\n        });\n    } catch (error) {\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_3__.z.ZodError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Validation error',\n                details: error.errors\n            }, {\n                status: 400\n            });\n        }\n        console.error('Error creating personnel:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/personnel/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _supabaseService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabaseService */ \"(rsc)/./src/lib/supabaseService.ts\");\n/**\n * Enterprise Database Service Layer\n * This replaces the mock database with real Supabase integration\n * Provides a unified interface for all database operations\n */ \n/**\n * Main Database Service Class\n * This class provides the same interface as MockDatabase but uses Supabase\n */ class DatabaseService {\n    // =====================================================\n    // USER OPERATIONS\n    // =====================================================\n    /**\n   * Find user by email address\n   * @param email - User's email address\n   * @returns User object or null if not found\n   */ static async findUserByEmail(email) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.findUserByEmail(email);\n        } catch (error) {\n            console.error('[DatabaseService] Error in findUserByEmail:', error);\n            throw error;\n        }\n    }\n    /**\n   * Find user by ID\n   * @param id - User's ID\n   * @returns User object or null if not found\n   */ static async findUserById(id) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.findUserById(id);\n        } catch (error) {\n            console.error('[DatabaseService] Error in findUserById:', error);\n            throw error;\n        }\n    }\n    /**\n   * Create a new user\n   * @param userData - User data to insert (without id, created_at, updated_at)\n   * @returns Created user object\n   */ static async createUser(userData) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.createUser(userData);\n        } catch (error) {\n            console.error('[DatabaseService] Error in createUser:', error);\n            throw error;\n        }\n    }\n    /**\n   * Update user data\n   * @param id - User ID to update\n   * @param userData - Partial user data to update\n   * @returns Updated user object or null if not found\n   */ static async updateUser(id, userData) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.updateUser(id, userData);\n        } catch (error) {\n            console.error('[DatabaseService] Error in updateUser:', error);\n            throw error;\n        }\n    }\n    /**\n   * Delete user by ID\n   * @param id - User ID to delete\n   * @returns True if deleted successfully\n   */ static async deleteUser(id) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.deleteUser(id);\n        } catch (error) {\n            console.error('[DatabaseService] Error in deleteUser:', error);\n            throw error;\n        }\n    }\n    /**\n   * Get all users with optional filtering\n   * @param options - Query options\n   * @returns Array of users\n   */ static async getAllUsers(options) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.getAllUsers(options);\n        } catch (error) {\n            console.error('[DatabaseService] Error in getAllUsers:', error);\n            throw error;\n        }\n    }\n    // =====================================================\n    // PERSONNEL OPERATIONS\n    // =====================================================\n    /**\n   * Find personnel by email address\n   * @param email - Personnel's email address\n   * @returns Personnel object or null if not found\n   */ static async findPersonnelByEmail(email) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.findPersonnelByEmail(email);\n        } catch (error) {\n            console.error('[DatabaseService] Error in findPersonnelByEmail:', error);\n            throw error;\n        }\n    }\n    /**\n   * Find personnel by ID\n   * @param id - Personnel's ID\n   * @returns Personnel object or null if not found\n   */ static async findPersonnelById(id) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.findPersonnelById(id);\n        } catch (error) {\n            console.error('[DatabaseService] Error in findPersonnelById:', error);\n            throw error;\n        }\n    }\n    /**\n   * Create new personnel record\n   * @param personnelData - Personnel data to insert (without id, created_at, updated_at)\n   * @returns Created personnel object\n   */ static async createPersonnel(personnelData) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.createPersonnel(personnelData);\n        } catch (error) {\n            console.error('[DatabaseService] Error in createPersonnel:', error);\n            throw error;\n        }\n    }\n    /**\n   * Update personnel data\n   * @param id - Personnel ID to update\n   * @param personnelData - Partial personnel data to update\n   * @returns Updated personnel object or null if not found\n   */ static async updatePersonnel(id, personnelData) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.updatePersonnel(id, personnelData);\n        } catch (error) {\n            console.error('[DatabaseService] Error in updatePersonnel:', error);\n            throw error;\n        }\n    }\n    /**\n   * Delete personnel by ID\n   * @param id - Personnel ID to delete\n   * @returns True if deleted successfully\n   */ static async deletePersonnel(id) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.deletePersonnel(id);\n        } catch (error) {\n            console.error('[DatabaseService] Error in deletePersonnel:', error);\n            throw error;\n        }\n    }\n    /**\n   * Get all personnel with pagination and filtering\n   * @param page - Page number (default: 1)\n   * @param limit - Items per page (default: 10)\n   * @param options - Additional query options\n   * @returns Paginated personnel data\n   */ static async getAllPersonnel(page = 1, limit = 10, options) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.getAllPersonnel({\n                page,\n                limit,\n                ...options\n            });\n        } catch (error) {\n            console.error('[DatabaseService] Error in getAllPersonnel:', error);\n            throw error;\n        }\n    }\n    // =====================================================\n    // PERSONNEL DOCUMENTS OPERATIONS\n    // =====================================================\n    /**\n   * Get all documents for a personnel\n   * @param personnelId - Personnel ID\n   * @returns Array of personnel documents\n   */ static async getPersonnelDocuments(personnelId) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.getPersonnelDocuments(personnelId);\n        } catch (error) {\n            console.error('[DatabaseService] Error in getPersonnelDocuments:', error);\n            throw error;\n        }\n    }\n    /**\n   * Create a new personnel document\n   * @param documentData - Document data to insert (without id, created_at, updated_at)\n   * @returns Created document object\n   */ static async createPersonnelDocument(documentData) {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.createPersonnelDocument(documentData);\n        } catch (error) {\n            console.error('[DatabaseService] Error in createPersonnelDocument:', error);\n            throw error;\n        }\n    }\n    // =====================================================\n    // UTILITY OPERATIONS\n    // =====================================================\n    /**\n   * Database health check\n   * @returns Health check result\n   */ static async healthCheck() {\n        try {\n            return await _supabaseService__WEBPACK_IMPORTED_MODULE_0__.SupabaseService.healthCheck();\n        } catch (error) {\n            console.error('[DatabaseService] Error in healthCheck:', error);\n            return {\n                success: false,\n                message: `Health check failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n                details: {\n                    error\n                }\n            };\n        }\n    }\n}\n// Export as default for easy importing\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DatabaseService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database */ \"(rsc)/./src/lib/database.ts\");\n/**\n * Enterprise Database Connection\n * This file provides the main database interface for the application.\n * It now uses Supabase instead of mock data for production-ready functionality.\n */ \n// Export the enterprise database service as the main database interface\nconst db = _database__WEBPACK_IMPORTED_MODULE_0__.DatabaseService;\n// For backward compatibility and easy migration, we also export it as default\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_database__WEBPACK_IMPORTED_MODULE_0__.DatabaseService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RiLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0NBSUMsR0FFMkM7QUFFNUMsd0VBQXdFO0FBQ2pFLE1BQU1DLEtBQUtELHNEQUFlQSxDQUFBO0FBRWpDLDhFQUE4RTtBQUM5RSxpRUFBZUEsc0RBQWVBLEVBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREFCQklFXFxPbmVEcml2ZVxcRGVza3RvcFxcbGd1LXByb2plY3QtYXBwXFxzcmNcXGxpYlxcZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFbnRlcnByaXNlIERhdGFiYXNlIENvbm5lY3Rpb25cbiAqIFRoaXMgZmlsZSBwcm92aWRlcyB0aGUgbWFpbiBkYXRhYmFzZSBpbnRlcmZhY2UgZm9yIHRoZSBhcHBsaWNhdGlvbi5cbiAqIEl0IG5vdyB1c2VzIFN1cGFiYXNlIGluc3RlYWQgb2YgbW9jayBkYXRhIGZvciBwcm9kdWN0aW9uLXJlYWR5IGZ1bmN0aW9uYWxpdHkuXG4gKi9cblxuaW1wb3J0IHsgRGF0YWJhc2VTZXJ2aWNlIH0gZnJvbSAnLi9kYXRhYmFzZSdcblxuLy8gRXhwb3J0IHRoZSBlbnRlcnByaXNlIGRhdGFiYXNlIHNlcnZpY2UgYXMgdGhlIG1haW4gZGF0YWJhc2UgaW50ZXJmYWNlXG5leHBvcnQgY29uc3QgZGIgPSBEYXRhYmFzZVNlcnZpY2VcblxuLy8gRm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgYW5kIGVhc3kgbWlncmF0aW9uLCB3ZSBhbHNvIGV4cG9ydCBpdCBhcyBkZWZhdWx0XG5leHBvcnQgZGVmYXVsdCBEYXRhYmFzZVNlcnZpY2VcbiJdLCJuYW1lcyI6WyJEYXRhYmFzZVNlcnZpY2UiLCJkYiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSupabaseServerClient: () => (/* binding */ getSupabaseServerClient),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin),\n/* harmony export */   testSupabaseConnection: () => (/* binding */ testSupabaseConnection)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/**\n * DEPRECATED: This file is being replaced by the new Supabase Auth utilities\n * Please use utils/supabase/client.ts and utils/supabase/server.ts instead\n *\n * This file is kept for backward compatibility with existing database operations\n * but should not be used for new authentication features.\n */ \n// Get environment variables with fallbacks for development\nconst supabaseUrl = \"https://lkolpgpmdculqqfqyzaf.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxrb2xwZ3BtZGN1bHFxZnF5emFmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk0ODE5ODcsImV4cCI6MjA2NTA1Nzk4N30.MRwyyo6wLKs2HWa4tQdfBPEq3mDee19lckU3MnVyWhU\" || 0;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxrb2xwZ3BtZGN1bHFxZnF5emFmIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTQ4MTk4NywiZXhwIjoyMDY1MDU3OTg3fQ.k4XWhiD9cbiJxN7s4ZPQYYCZAcXbLw8xIc3k4R4ROv0';\n// Validate required environment variables\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.error('Missing Supabase environment variables:', {\n        url: !!supabaseUrl,\n        anonKey: !!supabaseAnonKey\n    });\n}\n// Legacy client for backward compatibility (database operations only)\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true\n    }\n});\n// Admin client for server-side operations (bypasses RLS)\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey || supabaseAnonKey, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\n// Helper function to get server-side client (legacy)\nconst getSupabaseServerClient = ()=>{\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n};\n// Connection test function\nconst testSupabaseConnection = async ()=>{\n    try {\n        const { error } = await supabase.from('users').select('count').limit(1);\n        if (error && error.code !== 'PGRST116') {\n            throw error;\n        }\n        return {\n            success: true,\n            message: 'Connected to Supabase successfully!'\n        };\n    } catch (error) {\n        console.error('Supabase connection test failed:', error);\n        return {\n            success: false,\n            message: `Connection failed: ${error instanceof Error ? error.message : 'Unknown error'}`\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7OztDQU1DLEdBRW1EO0FBR3BELDJEQUEyRDtBQUMzRCxNQUFNQyxjQUFjQywwQ0FBb0MsSUFBSSxDQUEwQztBQUN0RyxNQUFNRyxrQkFBa0JILGtOQUF5QyxJQUFJLENBQWtOO0FBQ3ZSLE1BQU1LLHFCQUFxQkwsUUFBUUMsR0FBRyxDQUFDSyx5QkFBeUIsSUFBSTtBQUVwRSwwQ0FBMEM7QUFDMUMsSUFBSSxDQUFDUCxlQUFlLENBQUNJLGlCQUFpQjtJQUNwQ0ksUUFBUUMsS0FBSyxDQUFDLDJDQUEyQztRQUN2REMsS0FBSyxDQUFDLENBQUNWO1FBQ1BXLFNBQVMsQ0FBQyxDQUFDUDtJQUNiO0FBQ0Y7QUFFQSxzRUFBc0U7QUFDL0QsTUFBTVEsV0FBV2IsbUVBQVlBLENBQVdDLGFBQWFJLGlCQUFpQjtJQUMzRVMsTUFBTTtRQUNKQyxrQkFBa0I7UUFDbEJDLGdCQUFnQjtRQUNoQkMsb0JBQW9CO0lBQ3RCO0FBQ0YsR0FBRTtBQUVGLHlEQUF5RDtBQUNsRCxNQUFNQyxnQkFBZ0JsQixtRUFBWUEsQ0FBV0MsYUFBYU0sc0JBQXNCRixpQkFBaUI7SUFDdEdTLE1BQU07UUFDSkMsa0JBQWtCO1FBQ2xCQyxnQkFBZ0I7SUFDbEI7QUFDRixHQUFFO0FBRUYscURBQXFEO0FBQzlDLE1BQU1HLDBCQUEwQjtJQUNyQyxPQUFPbkIsbUVBQVlBLENBQVdDLGFBQWFJO0FBQzdDLEVBQUM7QUFFRCwyQkFBMkI7QUFDcEIsTUFBTWUseUJBQXlCO0lBQ3BDLElBQUk7UUFDRixNQUFNLEVBQUVWLEtBQUssRUFBRSxHQUFHLE1BQU1HLFNBQ3JCUSxJQUFJLENBQUMsU0FDTEMsTUFBTSxDQUFDLFNBQ1BDLEtBQUssQ0FBQztRQUVULElBQUliLFNBQVNBLE1BQU1jLElBQUksS0FBSyxZQUFZO1lBQ3RDLE1BQU1kO1FBQ1I7UUFFQSxPQUFPO1lBQUVlLFNBQVM7WUFBTUMsU0FBUztRQUFzQztJQUN6RSxFQUFFLE9BQU9oQixPQUFPO1FBQ2RELFFBQVFDLEtBQUssQ0FBQyxvQ0FBb0NBO1FBQ2xELE9BQU87WUFDTGUsU0FBUztZQUNUQyxTQUFTLENBQUMsbUJBQW1CLEVBQUVoQixpQkFBaUJpQixRQUFRakIsTUFBTWdCLE9BQU8sR0FBRyxpQkFBaUI7UUFDM0Y7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREFCQklFXFxPbmVEcml2ZVxcRGVza3RvcFxcbGd1LXByb2plY3QtYXBwXFxzcmNcXGxpYlxcc3VwYWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBERVBSRUNBVEVEOiBUaGlzIGZpbGUgaXMgYmVpbmcgcmVwbGFjZWQgYnkgdGhlIG5ldyBTdXBhYmFzZSBBdXRoIHV0aWxpdGllc1xuICogUGxlYXNlIHVzZSB1dGlscy9zdXBhYmFzZS9jbGllbnQudHMgYW5kIHV0aWxzL3N1cGFiYXNlL3NlcnZlci50cyBpbnN0ZWFkXG4gKlxuICogVGhpcyBmaWxlIGlzIGtlcHQgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgd2l0aCBleGlzdGluZyBkYXRhYmFzZSBvcGVyYXRpb25zXG4gKiBidXQgc2hvdWxkIG5vdCBiZSB1c2VkIGZvciBuZXcgYXV0aGVudGljYXRpb24gZmVhdHVyZXMuXG4gKi9cblxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJ1xuaW1wb3J0IHsgRGF0YWJhc2UgfSBmcm9tICcuL2RhdGFiYXNlLnR5cGVzJ1xuXG4vLyBHZXQgZW52aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggZmFsbGJhY2tzIGZvciBkZXZlbG9wbWVudFxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgJ2h0dHBzOi8vbGtvbHBncG1kY3VscXFmcXl6YWYuc3VwYWJhc2UuY28nXG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSB8fCAnZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjM01pT2lKemRYQmhZbUZ6WlNJc0luSmxaaUk2SW14cmIyeHdaM0J0WkdOMWJIRnhabkY1ZW1GbUlpd2ljbTlzWlNJNkltRnViMjRpTENKcFlYUWlPakUzTkRrME9ERTVPRGNzSW1WNGNDSTZNakEyTlRBMU56azROMzAuTVJ3eXlvNndMS3MySFdhNHRRZGZCUEVxM21EZWUxOWxja1UzTW5WeVdoVSdcbmNvbnN0IHN1cGFiYXNlU2VydmljZUtleSA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkgfHwgJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNklteHJiMnh3WjNCdFpHTjFiSEZ4Wm5GNWVtRm1JaXdpY205c1pTSTZJbk5sY25acFkyVmZjbTlzWlNJc0ltbGhkQ0k2TVRjME9UUTRNVGs0Tnl3aVpYaHdJam95TURZMU1EVTNPVGczZlEuazRYV2hpRDljYmlKeE43czRaUFFZWUNaQWNYYkx3OHhJYzNrNFI0Uk92MCdcblxuLy8gVmFsaWRhdGUgcmVxdWlyZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzXG5pZiAoIXN1cGFiYXNlVXJsIHx8ICFzdXBhYmFzZUFub25LZXkpIHtcbiAgY29uc29sZS5lcnJvcignTWlzc2luZyBTdXBhYmFzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXM6Jywge1xuICAgIHVybDogISFzdXBhYmFzZVVybCxcbiAgICBhbm9uS2V5OiAhIXN1cGFiYXNlQW5vbktleVxuICB9KVxufVxuXG4vLyBMZWdhY3kgY2xpZW50IGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5IChkYXRhYmFzZSBvcGVyYXRpb25zIG9ubHkpXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQ8RGF0YWJhc2U+KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXksIHtcbiAgYXV0aDoge1xuICAgIGF1dG9SZWZyZXNoVG9rZW46IHRydWUsXG4gICAgcGVyc2lzdFNlc3Npb246IHRydWUsXG4gICAgZGV0ZWN0U2Vzc2lvbkluVXJsOiB0cnVlXG4gIH1cbn0pXG5cbi8vIEFkbWluIGNsaWVudCBmb3Igc2VydmVyLXNpZGUgb3BlcmF0aW9ucyAoYnlwYXNzZXMgUkxTKVxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlQWRtaW4gPSBjcmVhdGVDbGllbnQ8RGF0YWJhc2U+KHN1cGFiYXNlVXJsLCBzdXBhYmFzZVNlcnZpY2VLZXkgfHwgc3VwYWJhc2VBbm9uS2V5LCB7XG4gIGF1dGg6IHtcbiAgICBhdXRvUmVmcmVzaFRva2VuOiBmYWxzZSxcbiAgICBwZXJzaXN0U2Vzc2lvbjogZmFsc2VcbiAgfVxufSlcblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGdldCBzZXJ2ZXItc2lkZSBjbGllbnQgKGxlZ2FjeSlcbmV4cG9ydCBjb25zdCBnZXRTdXBhYmFzZVNlcnZlckNsaWVudCA9ICgpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNsaWVudDxEYXRhYmFzZT4oc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSlcbn1cblxuLy8gQ29ubmVjdGlvbiB0ZXN0IGZ1bmN0aW9uXG5leHBvcnQgY29uc3QgdGVzdFN1cGFiYXNlQ29ubmVjdGlvbiA9IGFzeW5jICgpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJzJylcbiAgICAgIC5zZWxlY3QoJ2NvdW50JylcbiAgICAgIC5saW1pdCgxKVxuICAgIFxuICAgIGlmIChlcnJvciAmJiBlcnJvci5jb2RlICE9PSAnUEdSU1QxMTYnKSB7IC8vIFBHUlNUMTE2ID0gcmVsYXRpb24gZG9lcyBub3QgZXhpc3QgKGV4cGVjdGVkIGlmIG5vIHRhYmxlcylcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIFxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdDb25uZWN0ZWQgdG8gU3VwYWJhc2Ugc3VjY2Vzc2Z1bGx5IScgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1N1cGFiYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgZXJyb3IpXG4gICAgcmV0dXJuIHsgXG4gICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICBtZXNzYWdlOiBgQ29ubmVjdGlvbiBmYWlsZWQ6ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcid9YCBcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZUFub25LZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlU2VydmljZUtleSIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJjb25zb2xlIiwiZXJyb3IiLCJ1cmwiLCJhbm9uS2V5Iiwic3VwYWJhc2UiLCJhdXRoIiwiYXV0b1JlZnJlc2hUb2tlbiIsInBlcnNpc3RTZXNzaW9uIiwiZGV0ZWN0U2Vzc2lvbkluVXJsIiwic3VwYWJhc2VBZG1pbiIsImdldFN1cGFiYXNlU2VydmVyQ2xpZW50IiwidGVzdFN1cGFiYXNlQ29ubmVjdGlvbiIsImZyb20iLCJzZWxlY3QiLCJsaW1pdCIsImNvZGUiLCJzdWNjZXNzIiwibWVzc2FnZSIsIkVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabaseService.ts":
/*!************************************!*\
  !*** ./src/lib/supabaseService.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseService: () => (/* binding */ SupabaseService)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\n/**\n * Enterprise-grade Supabase Service Layer\n * Provides robust database operations with proper error handling,\n * logging, and performance optimization for production use.\n */ class SupabaseService {\n    // =====================================================\n    // USER OPERATIONS\n    // =====================================================\n    /**\n   * Find user by email address\n   * @param email - User's email address\n   * @returns User object or null if not found\n   */ static async findUserByEmail(email) {\n        try {\n            console.log(`[SupabaseService] Finding user by email: ${email}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').select('*').eq('email', email).single();\n            if (error) {\n                if (error.code === 'PGRST116') {\n                    console.warn('[SupabaseService] Users table does not exist yet');\n                    return null;\n                }\n                console.error('[SupabaseService] Error finding user by email:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] User found: ${data?.name || 'Unknown'}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in findUserByEmail:', error);\n            throw error;\n        }\n    }\n    /**\n   * Find user by ID\n   * @param id - User's ID\n   * @returns User object or null if not found\n   */ static async findUserById(id) {\n        try {\n            console.log(`[SupabaseService] Finding user by ID: ${id}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').select('*').eq('id', id).single();\n            if (error) {\n                if (error.code === 'PGRST116') {\n                    console.warn('[SupabaseService] No user found with ID:', id);\n                    return null;\n                }\n                console.error('[SupabaseService] Error finding user by ID:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in findUserById:', error);\n            throw error;\n        }\n    }\n    /**\n   * Create a new user\n   * @param userData - User data to insert\n   * @returns Created user object\n   */ static async createUser(userData) {\n        try {\n            console.log(`[SupabaseService] Creating user: ${userData.email}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').insert({\n                ...userData,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }).select().single();\n            if (error) {\n                console.error('[SupabaseService] Error creating user:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] User created successfully: ${data.name}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in createUser:', error);\n            throw error;\n        }\n    }\n    /**\n   * Update user data\n   * @param id - User ID to update\n   * @param userData - Partial user data to update\n   * @returns Updated user object or null if not found\n   */ static async updateUser(id, userData) {\n        try {\n            console.log(`[SupabaseService] Updating user ID: ${id}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').update({\n                ...userData,\n                updated_at: new Date().toISOString()\n            }).eq('id', id).select().single();\n            if (error) {\n                console.error('[SupabaseService] Error updating user:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] User updated successfully: ${data?.name || 'Unknown'}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in updateUser:', error);\n            throw error;\n        }\n    }\n    /**\n   * Delete user by ID\n   * @param id - User ID to delete\n   * @returns True if deleted successfully\n   */ static async deleteUser(id) {\n        try {\n            console.log(`[SupabaseService] Deleting user ID: ${id}`);\n            const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').delete().eq('id', id);\n            if (error) {\n                console.error('[SupabaseService] Error deleting user:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] User deleted successfully: ${id}`);\n            return true;\n        } catch (error) {\n            console.error('[SupabaseService] Error in deleteUser:', error);\n            throw error;\n        }\n    }\n    /**\n   * Get all users with optional filtering and pagination\n   * @param options - Query options\n   * @returns Array of users\n   */ static async getAllUsers(options) {\n        try {\n            console.log('[SupabaseService] Getting all users with options:', options);\n            let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').select('*');\n            // Apply search filter\n            if (options?.search) {\n                query = query.or(`name.ilike.%${options.search}%,email.ilike.%${options.search}%`);\n            }\n            // Apply status filter\n            if (options?.status) {\n                query = query.eq('status', options.status);\n            }\n            // Apply pagination\n            if (options?.page && options?.limit) {\n                const from = (options.page - 1) * options.limit;\n                const to = from + options.limit - 1;\n                query = query.range(from, to);\n            }\n            // Order by name alphabetically (A-Z)\n            query = query.order('name', {\n                ascending: true\n            });\n            const { data, error } = await query;\n            if (error) {\n                console.error('[SupabaseService] Error getting all users:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Retrieved ${data?.length || 0} users`);\n            return data || [];\n        } catch (error) {\n            console.error('[SupabaseService] Error in getAllUsers:', error);\n            throw error;\n        }\n    }\n    // =====================================================\n    // PERSONNEL OPERATIONS\n    // =====================================================\n    /**\n   * Find personnel by email address\n   * @param email - Personnel's email address\n   * @returns Personnel object or null if not found\n   */ static async findPersonnelByEmail(email) {\n        try {\n            console.log(`[SupabaseService] Finding personnel by email: ${email}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').select('*').eq('email', email).single();\n            if (error) {\n                if (error.code === 'PGRST116') {\n                    console.warn('[SupabaseService] Personnel table does not exist yet');\n                    return null;\n                }\n                console.error('[SupabaseService] Error finding personnel by email:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Personnel found: ${data?.name || 'Unknown'}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in findPersonnelByEmail:', error);\n            throw error;\n        }\n    }\n    /**\n   * Find personnel by ID\n   * @param id - Personnel's ID\n   * @returns Personnel object or null if not found\n   */ static async findPersonnelById(id) {\n        try {\n            console.log(`[SupabaseService] Finding personnel by ID: ${id}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').select('*').eq('id', id).single();\n            if (error) {\n                if (error.code === 'PGRST116') {\n                    console.warn('[SupabaseService] No personnel found with ID:', id);\n                    return null;\n                }\n                console.error('[SupabaseService] Error finding personnel by ID:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in findPersonnelById:', error);\n            throw error;\n        }\n    }\n    /**\n   * Create new personnel record\n   * @param personnelData - Personnel data to insert\n   * @returns Created personnel object\n   */ static async createPersonnel(personnelData) {\n        try {\n            console.log(`[SupabaseService] Creating personnel: ${personnelData.email}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').insert({\n                ...personnelData,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }).select().single();\n            if (error) {\n                console.error('[SupabaseService] Error creating personnel:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Personnel created successfully: ${data.name}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in createPersonnel:', error);\n            throw error;\n        }\n    }\n    /**\n   * Update personnel data\n   * @param id - Personnel ID to update\n   * @param personnelData - Partial personnel data to update\n   * @returns Updated personnel object or null if not found\n   */ static async updatePersonnel(id, personnelData) {\n        try {\n            console.log(`[SupabaseService] Updating personnel ID: ${id}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').update({\n                ...personnelData,\n                updated_at: new Date().toISOString()\n            }).eq('id', id).select().single();\n            if (error) {\n                console.error('[SupabaseService] Error updating personnel:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Personnel updated successfully: ${data?.name || 'Unknown'}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in updatePersonnel:', error);\n            throw error;\n        }\n    }\n    /**\n   * Delete personnel by ID\n   * @param id - Personnel ID to delete\n   * @returns True if deleted successfully\n   */ static async deletePersonnel(id) {\n        try {\n            console.log(`[SupabaseService] Deleting personnel ID: ${id}`);\n            const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').delete().eq('id', id);\n            if (error) {\n                console.error('[SupabaseService] Error deleting personnel:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Personnel deleted successfully: ${id}`);\n            return true;\n        } catch (error) {\n            console.error('[SupabaseService] Error in deletePersonnel:', error);\n            throw error;\n        }\n    }\n    /**\n   * Get all personnel with pagination and filtering\n   * @param options - Query options\n   * @returns Paginated personnel data\n   */ static async getAllPersonnel(options) {\n        try {\n            const page = options?.page || 1;\n            const limit = options?.limit || 10;\n            console.log(`[SupabaseService] Getting all personnel - Page: ${page}, Limit: ${limit}`);\n            // Build query for count\n            let countQuery = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').select('*', {\n                count: 'exact',\n                head: true\n            });\n            // Build query for data\n            let dataQuery = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel').select('*');\n            // Apply filters to both queries\n            if (options?.search) {\n                const searchFilter = `name.ilike.%${options.search}%,email.ilike.%${options.search}%`;\n                countQuery = countQuery.or(searchFilter);\n                dataQuery = dataQuery.or(searchFilter);\n            }\n            if (options?.department) {\n                countQuery = countQuery.eq('department', options.department);\n                dataQuery = dataQuery.eq('department', options.department);\n            }\n            if (options?.status) {\n                countQuery = countQuery.eq('status', options.status);\n                dataQuery = dataQuery.eq('status', options.status);\n            }\n            // Get total count\n            const { count, error: countError } = await countQuery;\n            if (countError) {\n                console.error('[SupabaseService] Error getting personnel count:', countError);\n                throw new Error(`Database error: ${countError.message}`);\n            }\n            // Apply pagination and ordering to data query\n            const from = (page - 1) * limit;\n            const to = from + limit - 1;\n            // Apply sorting based on sort parameter\n            const sortBy = options?.sort || 'name_asc';\n            let sortedQuery = dataQuery.range(from, to);\n            switch(sortBy){\n                case 'id_asc':\n                    sortedQuery = sortedQuery.order('id', {\n                        ascending: true\n                    });\n                    break;\n                case 'id_desc':\n                    sortedQuery = sortedQuery.order('id', {\n                        ascending: false\n                    });\n                    break;\n                case 'name_desc':\n                    sortedQuery = sortedQuery.order('name', {\n                        ascending: false\n                    });\n                    break;\n                case 'name_asc':\n                default:\n                    sortedQuery = sortedQuery.order('name', {\n                        ascending: true\n                    });\n                    break;\n            }\n            const { data, error } = await sortedQuery;\n            if (error) {\n                console.error('[SupabaseService] Error getting personnel data:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            const result = {\n                data: data || [],\n                pagination: {\n                    page,\n                    limit,\n                    total: count || 0,\n                    pages: Math.ceil((count || 0) / limit)\n                }\n            };\n            console.log(`[SupabaseService] Retrieved ${result.data.length} personnel records`);\n            return result;\n        } catch (error) {\n            console.error('[SupabaseService] Error in getAllPersonnel:', error);\n            throw error;\n        }\n    }\n    // =====================================================\n    // PERSONNEL DOCUMENTS OPERATIONS\n    // =====================================================\n    /**\n   * Get all documents for a personnel\n   * @param personnelId - Personnel ID\n   * @returns Array of personnel documents\n   */ static async getPersonnelDocuments(personnelId) {\n        try {\n            console.log(`[SupabaseService] Getting documents for personnel ID: ${personnelId}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel_documents').select('*').eq('personnel_id', personnelId).order('created_at', {\n                ascending: false\n            });\n            if (error) {\n                console.error('[SupabaseService] Error getting personnel documents:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Retrieved ${data?.length || 0} documents`);\n            return data || [];\n        } catch (error) {\n            console.error('[SupabaseService] Error in getPersonnelDocuments:', error);\n            throw error;\n        }\n    }\n    /**\n   * Create a new personnel document\n   * @param documentData - Document data to insert\n   * @returns Created document object\n   */ static async createPersonnelDocument(documentData) {\n        try {\n            console.log(`[SupabaseService] Creating document: ${documentData.filename}`);\n            const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('personnel_documents').insert({\n                ...documentData,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }).select().single();\n            if (error) {\n                console.error('[SupabaseService] Error creating personnel document:', error);\n                throw new Error(`Database error: ${error.message}`);\n            }\n            console.log(`[SupabaseService] Document created successfully: ${data.filename}`);\n            return data;\n        } catch (error) {\n            console.error('[SupabaseService] Error in createPersonnelDocument:', error);\n            throw error;\n        }\n    }\n    // =====================================================\n    // UTILITY OPERATIONS\n    // =====================================================\n    /**\n   * Database health check\n   * @returns Health check result\n   */ static async healthCheck() {\n        try {\n            console.log('[SupabaseService] Performing health check');\n            // Test basic connection\n            const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('users').select('count').limit(1);\n            if (error && error.code !== 'PGRST116') {\n                throw error;\n            }\n            const result = {\n                success: true,\n                message: 'Supabase connection successful!',\n                details: {\n                    connected: true,\n                    tablesExist: error?.code !== 'PGRST116',\n                    timestamp: new Date().toISOString()\n                }\n            };\n            console.log('[SupabaseService] Health check passed');\n            return result;\n        } catch (error) {\n            const result = {\n                success: false,\n                message: `Connection failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n                details: {\n                    error\n                }\n            };\n            console.error('[SupabaseService] Health check failed:', result);\n            return result;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabaseService.ts\n");

/***/ }),

/***/ "(rsc)/./src/utils/supabase/server.ts":
/*!**************************************!*\
  !*** ./src/utils/supabase/server.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAdminClient: () => (/* binding */ createAdminClient),\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/**\n * Supabase Client for Server Components\n * \n * This client is used in Server Components, Server Actions, and Route Handlers.\n * It properly handles cookies and session management on the server side.\n * \n * Usage:\n * ```typescript\n * import { createClient } from '@/utils/supabase/server'\n * \n * const supabase = await createClient()\n * const { data: { user } } = await supabase.auth.getUser()\n * ```\n */ \n\nasync function createClient() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://lkolpgpmdculqqfqyzaf.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxrb2xwZ3BtZGN1bHFxZnF5emFmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk0ODE5ODcsImV4cCI6MjA2NTA1Nzk4N30.MRwyyo6wLKs2HWa4tQdfBPEq3mDee19lckU3MnVyWhU\", {\n        cookies: {\n            getAll () {\n                return cookieStore.getAll();\n            },\n            setAll (cookiesToSet) {\n                try {\n                    cookiesToSet.forEach(({ name, value, options })=>cookieStore.set(name, value, options));\n                } catch  {\n                // The `setAll` method was called from a Server Component.\n                // This can be ignored if you have middleware refreshing\n                // user sessions.\n                }\n            }\n        }\n    });\n}\n// Service role client for admin operations (bypasses RLS)\nasync function createAdminClient() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://lkolpgpmdculqqfqyzaf.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n        cookies: {\n            getAll () {\n                return cookieStore.getAll();\n            },\n            setAll (cookiesToSet) {\n                try {\n                    cookiesToSet.forEach(({ name, value, options })=>cookieStore.set(name, value, options));\n                } catch  {\n                // Ignore cookie setting errors in Server Components\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdXRpbHMvc3VwYWJhc2Uvc2VydmVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7OztDQWFDLEdBRWlEO0FBQ1o7QUFHL0IsZUFBZUU7SUFDcEIsTUFBTUMsY0FBYyxNQUFNRixxREFBT0E7SUFFakMsT0FBT0QsaUVBQWtCQSxDQUN2QkksMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7UUFDRUgsU0FBUztZQUNQTztnQkFDRSxPQUFPTCxZQUFZSyxNQUFNO1lBQzNCO1lBQ0FDLFFBQU9DLFlBQVk7Z0JBQ2pCLElBQUk7b0JBQ0ZBLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUUsR0FDNUNYLFlBQVlZLEdBQUcsQ0FBQ0gsTUFBTUMsT0FBT0M7Z0JBRWpDLEVBQUUsT0FBTTtnQkFDTiwwREFBMEQ7Z0JBQzFELHdEQUF3RDtnQkFDeEQsaUJBQWlCO2dCQUNuQjtZQUNGO1FBQ0Y7SUFDRjtBQUVKO0FBRUEsMERBQTBEO0FBQ25ELGVBQWVFO0lBQ3BCLE1BQU1iLGNBQWMsTUFBTUYscURBQU9BO0lBRWpDLE9BQU9ELGlFQUFrQkEsQ0FDdkJJLDBDQUFvQyxFQUNwQ0EsUUFBUUMsR0FBRyxDQUFDWSx5QkFBeUIsRUFDckM7UUFDRWhCLFNBQVM7WUFDUE87Z0JBQ0UsT0FBT0wsWUFBWUssTUFBTTtZQUMzQjtZQUNBQyxRQUFPQyxZQUFZO2dCQUNqQixJQUFJO29CQUNGQSxhQUFhQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFLEdBQzVDWCxZQUFZWSxHQUFHLENBQUNILE1BQU1DLE9BQU9DO2dCQUVqQyxFQUFFLE9BQU07Z0JBQ04sb0RBQW9EO2dCQUN0RDtZQUNGO1FBQ0Y7SUFDRjtBQUVKIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERBQkJJRVxcT25lRHJpdmVcXERlc2t0b3BcXGxndS1wcm9qZWN0LWFwcFxcc3JjXFx1dGlsc1xcc3VwYWJhc2VcXHNlcnZlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN1cGFiYXNlIENsaWVudCBmb3IgU2VydmVyIENvbXBvbmVudHNcbiAqIFxuICogVGhpcyBjbGllbnQgaXMgdXNlZCBpbiBTZXJ2ZXIgQ29tcG9uZW50cywgU2VydmVyIEFjdGlvbnMsIGFuZCBSb3V0ZSBIYW5kbGVycy5cbiAqIEl0IHByb3Blcmx5IGhhbmRsZXMgY29va2llcyBhbmQgc2Vzc2lvbiBtYW5hZ2VtZW50IG9uIHRoZSBzZXJ2ZXIgc2lkZS5cbiAqIFxuICogVXNhZ2U6XG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAL3V0aWxzL3N1cGFiYXNlL3NlcnZlcidcbiAqIFxuICogY29uc3Qgc3VwYWJhc2UgPSBhd2FpdCBjcmVhdGVDbGllbnQoKVxuICogY29uc3QgeyBkYXRhOiB7IHVzZXIgfSB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKClcbiAqIGBgYFxuICovXG5cbmltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InXG5pbXBvcnQgeyBjb29raWVzIH0gZnJvbSAnbmV4dC9oZWFkZXJzJ1xuaW1wb3J0IHsgRGF0YWJhc2UgfSBmcm9tICdAL2xpYi9kYXRhYmFzZS50eXBlcydcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNsaWVudCgpIHtcbiAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKClcblxuICByZXR1cm4gY3JlYXRlU2VydmVyQ2xpZW50PERhdGFiYXNlPihcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZISxcbiAgICB7XG4gICAgICBjb29raWVzOiB7XG4gICAgICAgIGdldEFsbCgpIHtcbiAgICAgICAgICByZXR1cm4gY29va2llU3RvcmUuZ2V0QWxsKClcbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWxsKGNvb2tpZXNUb1NldCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PlxuICAgICAgICAgICAgICBjb29raWVTdG9yZS5zZXQobmFtZSwgdmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgICApXG4gICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAvLyBUaGUgYHNldEFsbGAgbWV0aG9kIHdhcyBjYWxsZWQgZnJvbSBhIFNlcnZlciBDb21wb25lbnQuXG4gICAgICAgICAgICAvLyBUaGlzIGNhbiBiZSBpZ25vcmVkIGlmIHlvdSBoYXZlIG1pZGRsZXdhcmUgcmVmcmVzaGluZ1xuICAgICAgICAgICAgLy8gdXNlciBzZXNzaW9ucy5cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cbiAgKVxufVxuXG4vLyBTZXJ2aWNlIHJvbGUgY2xpZW50IGZvciBhZG1pbiBvcGVyYXRpb25zIChieXBhc3NlcyBSTFMpXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQWRtaW5DbGllbnQoKSB7XG4gIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpXG5cbiAgcmV0dXJuIGNyZWF0ZVNlcnZlckNsaWVudDxEYXRhYmFzZT4oXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZISxcbiAgICB7XG4gICAgICBjb29raWVzOiB7XG4gICAgICAgIGdldEFsbCgpIHtcbiAgICAgICAgICByZXR1cm4gY29va2llU3RvcmUuZ2V0QWxsKClcbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWxsKGNvb2tpZXNUb1NldCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PlxuICAgICAgICAgICAgICBjb29raWVTdG9yZS5zZXQobmFtZSwgdmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgICApXG4gICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAvLyBJZ25vcmUgY29va2llIHNldHRpbmcgZXJyb3JzIGluIFNlcnZlciBDb21wb25lbnRzXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJjb29raWVzIiwiY3JlYXRlQ2xpZW50IiwiY29va2llU3RvcmUiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJnZXRBbGwiLCJzZXRBbGwiLCJjb29raWVzVG9TZXQiLCJmb3JFYWNoIiwibmFtZSIsInZhbHVlIiwib3B0aW9ucyIsInNldCIsImNyZWF0ZUFkbWluQ2xpZW50IiwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/supabase/server.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fpersonnel%2Froute&page=%2Fapi%2Fpersonnel%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpersonnel%2Froute.ts&appDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CDABBIE%5COneDrive%5CDesktop%5Clgu-project-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();