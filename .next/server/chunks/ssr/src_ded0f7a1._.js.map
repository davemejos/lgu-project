{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DABBIE/OneDrive/Desktop/lgu-project-app/src/components/PersonnelModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { z } from 'zod'\nimport { X, User, Briefcase, Heart, Phone } from 'lucide-react'\n\nconst personnelSchema = z.object({\n  name: z.string().min(1, 'Name is required'),\n  email: z.string().email('Invalid email address'),\n  phone: z.string().optional(),\n  address: z.string().optional(),\n  department: z.string().min(1, 'Department is required'),\n  position: z.string().optional(),\n  hireDate: z.string().optional(),\n  status: z.enum(['Active', 'Inactive', 'On Leave', 'Suspended']),\n  biography: z.string().optional(),\n  spouseName: z.string().optional(),\n  spouseOccupation: z.string().optional(),\n  childrenCount: z.string().optional(),\n  emergencyContact: z.string().optional(),\n  childrenNames: z.string().optional(),\n})\n\ntype PersonnelForm = z.infer<typeof personnelSchema>\n\ninterface Personnel {\n  id: number\n  name: string\n  email: string\n  phone?: string\n  address?: string\n  profilePhoto?: string\n  department: string\n  position?: string\n  hireDate?: string\n  status: 'Active' | 'Inactive' | 'On Leave' | 'Suspended'\n  biography?: string\n  spouseName?: string\n  spouseOccupation?: string\n  childrenCount?: string\n  emergencyContact?: string\n  childrenNames?: string\n  createdAt: string\n  updatedAt: string\n}\n\ninterface PersonnelModalProps {\n  isOpen: boolean\n  onClose: () => void\n  onSave: () => void\n  personnel?: Personnel | null\n  mode: 'create' | 'edit'\n}\n\nconst departments = [\n  'Fisheries Management',\n  'Aquaculture Development',\n  'Marine Resources',\n  'Freshwater Fisheries',\n  'Fish Processing',\n  'Extension Services',\n  'Research & Development',\n  'Administration'\n]\n\nconst childrenOptions = ['0', '1', '2', '3', '4', '5', '5+']\n\nexport default function PersonnelModal({ isOpen, onClose, onSave, personnel, mode }: PersonnelModalProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [activeTab, setActiveTab] = useState('personal')\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm<PersonnelForm>({\n    resolver: zodResolver(personnelSchema),\n    defaultValues: {\n      status: 'Active',\n      childrenCount: '0'\n    }\n  })\n\n  useEffect(() => {\n    if (isOpen) {\n      if (mode === 'edit' && personnel) {\n        reset({\n          name: personnel.name,\n          email: personnel.email,\n          phone: personnel.phone || '',\n          address: personnel.address || '',\n          department: personnel.department,\n          position: personnel.position || '',\n          hireDate: personnel.hireDate || '',\n          status: personnel.status,\n          biography: personnel.biography || '',\n          spouseName: personnel.spouseName || '',\n          spouseOccupation: personnel.spouseOccupation || '',\n          childrenCount: personnel.childrenCount || '0',\n          emergencyContact: personnel.emergencyContact || '',\n          childrenNames: personnel.childrenNames || '',\n        })\n      } else {\n        reset({\n          name: '',\n          email: '',\n          phone: '',\n          address: '',\n          department: '',\n          position: '',\n          hireDate: '',\n          status: 'Active',\n          biography: '',\n          spouseName: '',\n          spouseOccupation: '',\n          childrenCount: '0',\n          emergencyContact: '',\n          childrenNames: '',\n        })\n      }\n      setError('')\n      setActiveTab('personal')\n    }\n  }, [isOpen, mode, personnel, reset])\n\n  const onSubmit = async (data: PersonnelForm) => {\n    setIsLoading(true)\n    setError('')\n\n    try {\n      const url = mode === 'create' ? '/api/personnel' : `/api/personnel/${personnel?.id}`\n      const method = mode === 'create' ? 'POST' : 'PUT'\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      })\n\n      if (response.ok) {\n        onSave()\n        onClose()\n      } else {\n        const errorData = await response.json()\n        setError(errorData.error || 'An error occurred')\n      }\n    } catch (error) {\n      setError('An error occurred. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (!isOpen) return null\n\n  const tabs = [\n    { id: 'personal', name: 'Personal Information', icon: User },\n    { id: 'work', name: 'Work Information', icon: Briefcase },\n    { id: 'family', name: 'Family Information', icon: Heart },\n  ]\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" onClick={onClose}></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\">&#8203;</span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-2xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full\">\n          <div className=\"bg-gradient-to-r from-blue-600 to-indigo-600 px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-10 w-10 bg-white bg-opacity-20 rounded-lg flex items-center justify-center mr-3\">\n                  <User className=\"h-6 w-6 text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-semibold text-white\">\n                    {mode === 'create' ? 'Register New Personnel' : 'Edit Personnel'}\n                  </h3>\n                  <p className=\"text-blue-100 text-sm\">Fisheries Division Registry</p>\n                </div>\n              </div>\n              <button\n                onClick={onClose}\n                className=\"text-white hover:text-gray-200 p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n          </div>\n\n          {/* Tabs */}\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n              {tabs.map((tab) => {\n                const Icon = tab.icon\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`${\n                      activeTab === tab.id\n                        ? 'border-indigo-500 text-indigo-600'\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                    } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm flex items-center transition-colors`}\n                  >\n                    <Icon className=\"w-4 h-4 mr-2\" />\n                    {tab.name}\n                  </button>\n                )\n              })}\n            </nav>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)} className=\"bg-white\">\n            <div className=\"px-6 py-6 max-h-96 overflow-y-auto\">\n              {/* Personal Information Tab */}\n              {activeTab === 'personal' && (\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Full Name *\n                      </label>\n                      <input\n                        {...register('name')}\n                        type=\"text\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter full name\"\n                      />\n                      {errors.name && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.name.message}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Email Address *\n                      </label>\n                      <input\n                        {...register('email')}\n                        type=\"email\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter email address\"\n                      />\n                      {errors.email && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Phone Number\n                      </label>\n                      <input\n                        {...register('phone')}\n                        type=\"text\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter phone number\"\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"emergencyContact\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Emergency Contact\n                      </label>\n                      <input\n                        {...register('emergencyContact')}\n                        type=\"text\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter emergency contact number\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Address\n                    </label>\n                    <textarea\n                      {...register('address')}\n                      rows={3}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      placeholder=\"Enter complete address\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              {/* Work Information Tab */}\n              {activeTab === 'work' && (\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"department\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Department/Division *\n                      </label>\n                      <select\n                        {...register('department')}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      >\n                        <option value=\"\">Select Department</option>\n                        {departments.map((dept) => (\n                          <option key={dept} value={dept}>{dept}</option>\n                        ))}\n                      </select>\n                      {errors.department && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.department.message}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"position\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Position/Title\n                      </label>\n                      <input\n                        {...register('position')}\n                        type=\"text\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter position or job title\"\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"hireDate\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Hire Date\n                      </label>\n                      <input\n                        {...register('hireDate')}\n                        type=\"date\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Status *\n                      </label>\n                      <select\n                        {...register('status')}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      >\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                        <option value=\"On Leave\">On Leave</option>\n                        <option value=\"Suspended\">Suspended</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"biography\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Biography/Notes\n                    </label>\n                    <textarea\n                      {...register('biography')}\n                      rows={4}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      placeholder=\"Enter biography, qualifications, or additional notes\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              {/* Family Information Tab */}\n              {activeTab === 'family' && (\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"spouseName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Spouse Name\n                      </label>\n                      <input\n                        {...register('spouseName')}\n                        type=\"text\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter spouse's name\"\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"spouseOccupation\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Spouse Occupation\n                      </label>\n                      <input\n                        {...register('spouseOccupation')}\n                        type=\"text\"\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"Enter spouse's occupation\"\n                      />\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"childrenCount\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Number of Children\n                      </label>\n                      <select\n                        {...register('childrenCount')}\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      >\n                        {childrenOptions.map((count) => (\n                          <option key={count} value={count}>{count}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"childrenNames\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Children Names & Ages\n                    </label>\n                    <textarea\n                      {...register('childrenNames')}\n                      rows={3}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                      placeholder=\"Enter children's names and ages (e.g., John (12), Mary (8))\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {error && (\n              <div className=\"px-6 py-3 bg-red-50 border-t border-red-200\">\n                <div className=\"text-sm text-red-700\">{error}</div>\n              </div>\n            )}\n\n            <div className=\"bg-gray-50 px-6 py-4 flex justify-between items-center border-t border-gray-200\">\n              <div className=\"flex space-x-2\">\n                {tabs.map((tab, index) => (\n                  <div\n                    key={tab.id}\n                    className={`w-2 h-2 rounded-full ${\n                      activeTab === tab.id ? 'bg-indigo-600' : 'bg-gray-300'\n                    }`}\n                  />\n                ))}\n              </div>\n              <div className=\"flex space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={onClose}\n                  className=\"px-6 py-3 border border-gray-300 rounded-lg shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"px-6 py-3 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 transition-all\"\n                >\n                  {isLoading ? 'Saving...' : mode === 'create' ? 'Register Personnel' : 'Update Personnel'}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 925, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DABBIE/OneDrive/Desktop/lgu-project-app/src/app/admin/personnel/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useSearchParams } from 'next/navigation'\nimport { Plus, Search, Edit, Trash2, Eye, Fish, Phone, MapPin, Building, Calendar, Users as UsersIcon } from 'lucide-react'\nimport PersonnelModal from '@/components/PersonnelModal'\nimport PersonnelViewModal from '@/components/PersonnelViewModal'\nimport DeleteConfirmModal from '@/components/DeleteConfirmModal'\n\ninterface Personnel {\n  id: number\n  name: string\n  email: string\n  phone?: string\n  address?: string\n  profilePhoto?: string\n  department: string\n  position?: string\n  hireDate?: string\n  status: 'Active' | 'Inactive' | 'On Leave' | 'Suspended'\n  biography?: string\n  spouseName?: string\n  spouseOccupation?: string\n  childrenCount?: string\n  emergencyContact?: string\n  childrenNames?: string\n  createdAt: string\n  updatedAt: string\n  documents?: any[]\n}\n\ninterface PaginationInfo {\n  page: number\n  limit: number\n  total: number\n  pages: number\n}\n\nexport default function PersonnelPage() {\n  const searchParams = useSearchParams()\n  const [personnel, setPersonnel] = useState<Personnel[]>([])\n  const [pagination, setPagination] = useState<PaginationInfo>({\n    page: 1,\n    limit: 10,\n    total: 0,\n    pages: 0\n  })\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false)\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false)\n  const [selectedPersonnel, setSelectedPersonnel] = useState<Personnel | null>(null)\n  const [modalMode, setModalMode] = useState<'create' | 'edit'>('create')\n\n  useEffect(() => {\n    fetchPersonnel()\n  }, [pagination.page, searchTerm])\n\n  useEffect(() => {\n    // Check if we should open create modal from URL\n    if (searchParams.get('action') === 'create') {\n      handleCreatePersonnel()\n    }\n  }, [searchParams])\n\n  const fetchPersonnel = async () => {\n    setLoading(true)\n    try {\n      const params = new URLSearchParams({\n        page: pagination.page.toString(),\n        limit: pagination.limit.toString(),\n        ...(searchTerm && { search: searchTerm })\n      })\n\n      const response = await fetch(`/api/personnel?${params}`)\n      if (response.ok) {\n        const data = await response.json()\n        setPersonnel(data.personnel)\n        setPagination(data.pagination)\n      }\n    } catch (error) {\n      console.error('Error fetching personnel:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleCreatePersonnel = () => {\n    setSelectedPersonnel(null)\n    setModalMode('create')\n    setIsModalOpen(true)\n  }\n\n  const handleEditPersonnel = (person: Personnel) => {\n    setSelectedPersonnel(person)\n    setModalMode('edit')\n    setIsModalOpen(true)\n  }\n\n  const handleViewPersonnel = (person: Personnel) => {\n    setSelectedPersonnel(person)\n    setIsViewModalOpen(true)\n  }\n\n  const handleDeletePersonnel = (person: Personnel) => {\n    setSelectedPersonnel(person)\n    setIsDeleteModalOpen(true)\n  }\n\n  const handlePersonnelSaved = () => {\n    setIsModalOpen(false)\n    fetchPersonnel()\n  }\n\n  const handlePersonnelDeleted = () => {\n    setIsDeleteModalOpen(false)\n    fetchPersonnel()\n  }\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault()\n    setPagination(prev => ({ ...prev, page: 1 }))\n    fetchPersonnel()\n  }\n\n  const getStatusBadge = (status: string) => {\n    const statusStyles = {\n      'Active': 'bg-green-500 text-white',\n      'Inactive': 'bg-red-500 text-white',\n      'On Leave': 'bg-yellow-500 text-white',\n      'Suspended': 'bg-red-500 text-white'\n    }\n    return statusStyles[status as keyof typeof statusStyles] || 'bg-gray-500 text-white'\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-blue-100\">\n        <div className=\"sm:flex sm:items-center sm:justify-between\">\n          <div className=\"flex items-center\">\n            <div className=\"h-12 w-12 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-xl flex items-center justify-center mr-4\">\n              <Fish className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Fisheries Personnel Registry</h1>\n              <p className=\"mt-1 text-gray-600\">Manage all fisheries personnel records and information</p>\n            </div>\n          </div>\n          <div className=\"mt-4 sm:mt-0\">\n            <button\n              onClick={handleCreatePersonnel}\n              className=\"inline-flex items-center px-6 py-3 border border-transparent rounded-xl shadow-sm text-base font-medium text-white bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all duration-200 transform hover:scale-105\"\n            >\n              <Plus className=\"w-5 h-5 mr-2\" />\n              Register New Personnel\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Search */}\n      <div className=\"bg-white rounded-xl shadow-lg p-6 border border-blue-100\">\n        <form onSubmit={handleSearch} className=\"flex gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <Search className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <input\n                    type=\"text\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-xl leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-base\"\n                    placeholder=\"Search personnel by name, email, department, position, or status...\"\n                  />\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"px-6 py-3 border border-gray-300 rounded-xl shadow-sm text-base font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n              >\n                Search\n              </button>\n        </form>\n      </div>\n\n      {/* Personnel Table */}\n      <div className=\"bg-white shadow-lg overflow-hidden rounded-2xl border border-blue-100\">\n          {loading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n            </div>\n          ) : personnel.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <Fish className=\"mx-auto h-16 w-16 text-gray-400 mb-4\" />\n              <p className=\"text-xl text-gray-500 mb-2\">No personnel found</p>\n              <p className=\"text-gray-400\">Start by registering your first fisheries personnel</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full\">\n                {/* Table Header */}\n                <thead className=\"bg-gradient-to-r from-blue-600 to-indigo-600\">\n                  <tr>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      REGISTRY ID\n                    </th>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      FULL NAME\n                    </th>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      POSITION\n                    </th>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      DIVISION/SECTION\n                    </th>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      CONTACT NUMBER\n                    </th>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      STATUS\n                    </th>\n                    <th className=\"px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider\">\n                      ACTIONS\n                    </th>\n                  </tr>\n                </thead>\n\n                {/* Table Body */}\n                <tbody className=\"bg-white divide-y divide-gray-100\">\n                  {personnel.map((person, index) => (\n                    <tr key={person.id} className=\"hover:bg-gray-50 transition-colors\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {person.id}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {person.name}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-700\">\n                          {person.position || '-'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-700\">\n                          {person.department}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-700\">\n                          {person.phone || '-'}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium uppercase ${getStatusBadge(person.status)}`}>\n                          {person.status}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => handleViewPersonnel(person)}\n                            className=\"inline-flex items-center px-3 py-1 rounded-md text-xs font-medium text-white bg-green-600 hover:bg-green-700 transition-colors\"\n                            title=\"View Details\"\n                          >\n                            <Eye className=\"h-3 w-3 mr-1\" />\n                            VIEW\n                          </button>\n                          <button\n                            onClick={() => handleEditPersonnel(person)}\n                            className=\"inline-flex items-center px-3 py-1 rounded-md text-xs font-medium text-white bg-blue-600 hover:bg-blue-700 transition-colors\"\n                            title=\"Edit Personnel\"\n                          >\n                            <Edit className=\"h-3 w-3 mr-1\" />\n                            EDIT\n                          </button>\n                          <button\n                            onClick={() => handleDeletePersonnel(person)}\n                            className=\"inline-flex items-center px-3 py-1 rounded-md text-xs font-medium text-white bg-red-600 hover:bg-red-700 transition-colors\"\n                            title=\"Delete Personnel\"\n                          >\n                            <Trash2 className=\"h-3 w-3 mr-1\" />\n                            DELETE\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n      </div>\n\n      {/* Pagination */}\n      {pagination.pages > 1 && (\n        <div className=\"bg-white px-6 py-4 flex items-center justify-between border-t border-gray-200 rounded-b-2xl\">\n            <div className=\"flex-1 flex justify-between sm:hidden\">\n              <button\n                onClick={() => setPagination(prev => ({ ...prev, page: Math.max(1, prev.page - 1) }))}\n                disabled={pagination.page === 1}\n                className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n              >\n                Previous\n              </button>\n              <button\n                onClick={() => setPagination(prev => ({ ...prev, page: Math.min(prev.pages, prev.page + 1) }))}\n                disabled={pagination.page === pagination.pages}\n                className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n              >\n                Next\n              </button>\n            </div>\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-700\">\n                  Showing <span className=\"font-medium\">{((pagination.page - 1) * pagination.limit) + 1}</span> to{' '}\n                  <span className=\"font-medium\">\n                    {Math.min(pagination.page * pagination.limit, pagination.total)}\n                  </span>{' '}\n                  of <span className=\"font-medium\">{pagination.total}</span> personnel\n                </p>\n              </div>\n              <div>\n                <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                  <button\n                    onClick={() => setPagination(prev => ({ ...prev, page: Math.max(1, prev.page - 1) }))}\n                    disabled={pagination.page === 1}\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Previous\n                  </button>\n                  <button\n                    onClick={() => setPagination(prev => ({ ...prev, page: Math.min(prev.pages, prev.page + 1) }))}\n                    disabled={pagination.page === pagination.pages}\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Next\n                  </button>\n                </nav>\n              </div>\n            </div>\n        </div>\n      )}\n\n      {/* Modals */}\n      <PersonnelModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onSave={handlePersonnelSaved}\n        personnel={selectedPersonnel}\n        mode={modalMode}\n      />\n\n      {/* <PersonnelViewModal\n        isOpen={isViewModalOpen}\n        onClose={() => setIsViewModalOpen(false)}\n        personnel={selectedPersonnel}\n      />\n\n      <DeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        onClose={() => setIsDeleteModalOpen(false)}\n        onConfirm={handlePersonnelDeleted}\n        personnel={selectedPersonnel}\n      /> */}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}